<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditease.mybatis.dao.TestResultMapper">
  <resultMap id="BaseResultMap" type="com.creditease.mybatis.pojo.TestResult">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="system_flag" jdbcType="VARCHAR" property="systemFlag" />
    <result column="system_env" jdbcType="VARCHAR" property="systemEnv" />
    <result column="merch_id" jdbcType="VARCHAR" property="merchId" />
    <result column="service_Id" jdbcType="VARCHAR" property="serviceId" />
    <result column="req_body" jdbcType="VARCHAR" property="reqBody" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="isPass" jdbcType="VARCHAR" property="ispass" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, system_flag, system_env, merch_id, service_Id, req_body, create_time, result, 
    isPass
  </sql>
  <select id="selectByExample" parameterType="com.creditease.mybatis.pojo.TestResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test_result
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from test_result
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.creditease.mybatis.pojo.TestResultExample">
    delete from test_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.creditease.mybatis.pojo.TestResult">
    insert into test_result (id, system_flag, system_env, 
      merch_id, service_Id, req_body, 
      create_time, result, isPass
      )
    values (#{id,jdbcType=INTEGER}, #{systemFlag,jdbcType=VARCHAR}, #{systemEnv,jdbcType=VARCHAR}, 
      #{merchId,jdbcType=VARCHAR}, #{serviceId,jdbcType=VARCHAR}, #{reqBody,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{result,jdbcType=VARCHAR}, #{ispass,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.creditease.mybatis.pojo.TestResult">
    insert into test_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="systemFlag != null">
        system_flag,
      </if>
      <if test="systemEnv != null">
        system_env,
      </if>
      <if test="merchId != null">
        merch_id,
      </if>
      <if test="serviceId != null">
        service_Id,
      </if>
      <if test="reqBody != null">
        req_body,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="ispass != null">
        isPass,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="systemFlag != null">
        #{systemFlag,jdbcType=VARCHAR},
      </if>
      <if test="systemEnv != null">
        #{systemEnv,jdbcType=VARCHAR},
      </if>
      <if test="merchId != null">
        #{merchId,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="reqBody != null">
        #{reqBody,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="ispass != null">
        #{ispass,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.creditease.mybatis.pojo.TestResultExample" resultType="java.lang.Integer">
    select count(*) from test_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_result
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.systemFlag != null">
        system_flag = #{record.systemFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.systemEnv != null">
        system_env = #{record.systemEnv,jdbcType=VARCHAR},
      </if>
      <if test="record.merchId != null">
        merch_id = #{record.merchId,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceId != null">
        service_Id = #{record.serviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.reqBody != null">
        req_body = #{record.reqBody,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.ispass != null">
        isPass = #{record.ispass,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_result
    set id = #{record.id,jdbcType=INTEGER},
      system_flag = #{record.systemFlag,jdbcType=VARCHAR},
      system_env = #{record.systemEnv,jdbcType=VARCHAR},
      merch_id = #{record.merchId,jdbcType=VARCHAR},
      service_Id = #{record.serviceId,jdbcType=VARCHAR},
      req_body = #{record.reqBody,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      result = #{record.result,jdbcType=VARCHAR},
      isPass = #{record.ispass,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.creditease.mybatis.pojo.TestResult">
    update test_result
    <set>
      <if test="systemFlag != null">
        system_flag = #{systemFlag,jdbcType=VARCHAR},
      </if>
      <if test="systemEnv != null">
        system_env = #{systemEnv,jdbcType=VARCHAR},
      </if>
      <if test="merchId != null">
        merch_id = #{merchId,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        service_Id = #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="reqBody != null">
        req_body = #{reqBody,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="ispass != null">
        isPass = #{ispass,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.creditease.mybatis.pojo.TestResult">
    update test_result
    set system_flag = #{systemFlag,jdbcType=VARCHAR},
      system_env = #{systemEnv,jdbcType=VARCHAR},
      merch_id = #{merchId,jdbcType=VARCHAR},
      service_Id = #{serviceId,jdbcType=VARCHAR},
      req_body = #{reqBody,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      result = #{result,jdbcType=VARCHAR},
      isPass = #{ispass,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="sumResult"  resultType="java.lang.Integer">
    select count(*) from test_result
    where system_flag=#{sysFlag,jdbcType=VARCHAR}
    and system_env=#{sysEnv,jdbcType=VARCHAR}
    and create_time between #{startDate,jdbcType=TIMESTAMP} and #{endDate,jdbcType=TIMESTAMP}

  </select>


  <select id="failCaseNum"  resultType="java.lang.Integer">
    select count(*) from test_result
    where system_flag=#{sysFlag,jdbcType=VARCHAR}
    and system_env=#{sysEnv,jdbcType=VARCHAR}
    and create_time between #{startDate,jdbcType=TIMESTAMP} and #{endDate,jdbcType=TIMESTAMP}
    and isPass=#{isPassFlag,jdbcType=VARCHAR}
  </select>

  <select id="failResult"  resultMap="BaseResultMap">
    select * from test_result
    where system_flag=#{sysFlag,jdbcType=VARCHAR}
    and system_env=#{sysEnv,jdbcType=VARCHAR}
    and create_time between #{startDate,jdbcType=TIMESTAMP} and #{endDate,jdbcType=TIMESTAMP}
    and isPass="false"
  </select>

  <select id="selectTestResultByParam" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from test_result
    where 1=1
    <if test="sysFlag != null and sysFlag != ''">
      and system_flag = #{sysFlag, jdbcType=VARCHAR}
    </if>

    <if test="sysEnv != null and sysEnv != ''">
      and system_env = #{sysEnv, jdbcType=VARCHAR}
    </if>

    <if test="merchId != null and merchId != ''">
      and merch_id = #{merchId, jdbcType=VARCHAR}
    </if>

    <if test="serviceId != null and serviceId != ''">
      and service_Id = #{serviceId, jdbcType=VARCHAR}
    </if>

    <if test="isPass != null and isPass != ''">
      and isPass = #{isPass, jdbcType=VARCHAR}
    </if>

    <if test="startDate != null ">
      and DATE (create_time) BETWEEN  DATE (#{startDate,jdbcType=TIMESTAMP}) AND  DATE (#{endDate,jdbcType=TIMESTAMP})
    </if>
    order by create_time desc

  </select>


  <delete id="batchDeleteRecord" parameterType="java.lang.Integer">
    delete from test_result
    where id in
    <foreach collection="resultIds" item="resultId" separator="," open="(" close=")" >
      #{resultId,jdbcType=INTEGER}
    </foreach>
  </delete>




</mapper>